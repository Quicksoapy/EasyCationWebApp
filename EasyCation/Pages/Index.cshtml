@page
@using EasyCation.Models
@using Microsoft.EntityFrameworkCore
@using System.Security.Cryptography
@using System.Text
@model IndexModel
@{
    ViewData["Title"] = "Home page";
    
    
    
}

<div class="text-center">
    <h1 class="display-4">EasyCation</h1>
</div>
<div class="text-lg-start">
    <p>Login</p>
</div>
<div class="text-lg-end">
    <p>Register</p>
    <EditForm Model="@this" OnValidSubmit="OnValidSubmitAccountCreation">
        <label>Create account:</label>
        <label>Username:</label>
        <InputText @bind-Value="newUsername"/>
        <label>Password:</label>
        <InputText @bind-Value="newPassword"></InputText>

        <button type="submit">Submit</button>
    </EditForm>
</div>

@code {
    [Inject] public AppDbContext AppDbContext { get; set; }
    string newUsername = "";
    string newPassword = "";
    
    private void OnValidSubmitAccountCreation()
    {
        var doesUsernameExist = AppDbContext.Accounts.Any(x => x.Username == newUsername);
        if (doesUsernameExist)
        {
            return;
        }
        
        var account = new Models.Account()
        {
            Username = newUsername,
            Password = ComputeSha256Hash(newPassword),
            UserCreatedAt = DateTime.Now
        };
        AppDbContext.Accounts.Add(account);
        AppDbContext.SaveChanges();
    }
    
    static string ComputeSha256Hash(string rawData)
    {
        // Create a SHA256   
        using (SHA256 sha256Hash = SHA256.Create())
        {
            // ComputeHash - returns byte array  
            byte[] bytes = sha256Hash.ComputeHash(Encoding.UTF8.GetBytes(rawData));

            // Convert byte array to a string   
            StringBuilder builder = new StringBuilder();
            for (int i = 0; i < bytes.Length; i++)
            {
                builder.Append(bytes[i].ToString("x2"));
            }
            return builder.ToString();
        }
    }
    
}